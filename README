sepia.el and Devel::Xref
========================

Sorry this isn't a "real" distribution, but it really shouldn't be.
First, Devel::Xref is largely cut-and-pasted from B::Xref, and the two
modules should probably be integrated.  Second, it's most useful with
the Emacs file, and I haven't tracked down how to make MakeMaker
install that on a "make install".  Given that installation wouldn't be
automatic anyways, it doesn't seem worthwhile to me to make this a
distribution.

INSTALLATION
============

1) Install Emacs::EPL, Data::Dumper, and Module::Info from CPAN.
2) place Devel/Xref.pm somewhere in your @INC path (or edit the
   code below that points to it).
3) put sepia.el and generic-repl.el somewhere Emacs will find them.

RUNNING
=======

In Emacs, type

   M-x load-library <ret> sepia <ret>
   M-x sepia-init <ret>
   M-x sepia-rebuild <ret>

This will give you an Xref database for the EPL process.  To add some
of your own modules, load them, then type

   M-x perl-eval-buffer <ret>

To interact more closely with the Perl process, you can start up a
read-eval-print loop (REPL) by typing
    M-x sepia-interact

Alternatively, you can get an interactive Perl scratchpad like the
*scratch* buffer by typing

   M-x sepia-scratchpad <ret>

then type the relevant "use" statements into this buffer, and evaluate
them by hitting C-j.  Probably the most useful part of the package is
the cross-reference facility; type

   M-x sepia- <tab>

to get a list of functions using it.  In general, the functions will
look up zero or more source locations, then allow you to cycle
through them with "M-x sepia-next".  With a prefix argument, the
functions will instead display a grep-mode buffer listing all the
hits, from which you can then navigate.

TODO
====

* (Easy) Use module, file, and line number to refine queries on the
  Perl side.
* (Hard) Use module, file, and line number to filter results on the
  Emacs side.
* (Medium) Clean up Perl side.
* (Hard) Merge with B::Xref.
* (Medium) Better documentation for Elisp side.
